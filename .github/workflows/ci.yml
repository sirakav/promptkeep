name: CI Checks

on:
  pull_request:
    branches: ["main"]

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install --frozen-lockfile" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            echo "lint_runner=yarn lint" >> $GITHUB_OUTPUT
            echo "build_runner=yarn build" >> $GITHUB_OUTPUT
            echo "test_runner=yarn test" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            # Assuming 'npm run lint', 'npm run build', 'npm test' are defined in package.json
            echo "lint_runner=npm run lint" >> $GITHUB_OUTPUT
            echo "build_runner=npm run build" >> $GITHUB_OUTPUT
            echo "test_runner=npm test" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Run Lint
        run: ${{ steps.detect-package-manager.outputs.lint_runner }}

      - name: Run Build
        run: ${{ steps.detect-package-manager.outputs.build_runner }}

      - name: Run Tests
        run: ${{ steps.detect-package-manager.outputs.test_runner }}

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright E2E Tests
        run: ${{ steps.detect-package-manager.outputs.manager }} run test:e2e
